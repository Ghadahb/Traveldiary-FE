{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { makeAutoObservable } from \"mobx\";\nimport { instance } from \"./instance\";\n\nvar ProfileStore = function ProfileStore() {\n  var _this = this;\n\n  _classCallCheck(this, ProfileStore);\n\n  this.profiles = [];\n  this.isLoading = true;\n\n  this.fetchProfiles = function _callee() {\n    var response;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(instance.get(\"/profile\"));\n\n          case 3:\n            response = _context.sent;\n            _this.profiles = response.data;\n            _this.isLoading = false;\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"ProfileStore -> fetchProfiles -> error\", _context.t0);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  this.updateProfile = function _callee2(updatedProfile) {\n    var res;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(instance.put(\"/profile/me}\", updatedProfile));\n\n          case 3:\n            res = _context2.sent;\n            _this.trips = _this.trips.map(function (profile) {\n              return _this.profiles._id === updatedProfile._id ? res.data : profile;\n            });\n            _context2.next = 10;\n            break;\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  this.deleteTrip = function _callee3(tripId) {\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(api.delete(\"/trip/\" + tripId));\n\n          case 3:\n            _this.trips = _this.trips.filter(function (trip) {\n              return trip._id !== tripId;\n            });\n            _context3.next = 9;\n            break;\n\n          case 6:\n            _context3.prev = 6;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.log(_context3.t0);\n\n          case 9:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n\n  makeAutoObservable(this);\n};\n\nvar profileStore = new ProfileStore();\nprofileStore.fetchProfiles();\nexport default profileStore;","map":{"version":3,"sources":["/Users/ghadah/Development/Traveldiary-ProjectFE-Final/store/profileStore.js"],"names":["React","makeAutoObservable","instance","ProfileStore","profiles","isLoading","fetchProfiles","get","response","data","console","log","updateProfile","updatedProfile","put","res","trips","map","profile","_id","deleteTrip","tripId","api","delete","filter","trip","profileStore"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,kBAAT,QAAmC,MAAnC;AACA,SAASC,QAAT;;IAEMC,Y,GAKF,wBAAc;AAAA;;AAAA;;AAAA,OAHdC,QAGc,GAHH,EAGG;AAAA,OAFdC,SAEc,GAFF,IAEE;;AAAA,OAKhBC,aALgB,GAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEaJ,QAAQ,CAACK,GAAT,CAAa,UAAb,CAFb;;AAAA;AAEJC,YAAAA,QAFI;AAGV,YAAA,KAAI,CAACJ,QAAL,GAAgBI,QAAQ,CAACC,IAAzB;AACA,YAAA,KAAI,CAACJ,SAAL,GAAiB,KAAjB;AAJU;AAAA;;AAAA;AAAA;AAAA;AAMVK,YAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ;;AANU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GALA;;AAAA,OAiBhBC,aAjBgB,GAiBA,kBAAOC,cAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEMX,QAAQ,CAACY,GAAT,iBAA6BD,cAA7B,CAFN;;AAAA;AAENE,YAAAA,GAFM;AAGZ,YAAA,KAAI,CAACC,KAAL,GAAa,KAAI,CAACA,KAAL,CAAWC,GAAX,CAAe,UAACC,OAAD;AAAA,qBAC1B,KAAI,CAACd,QAAL,CAAce,GAAd,KAAsBN,cAAc,CAACM,GAArC,GAA2CJ,GAAG,CAACN,IAA/C,GAAsDS,OAD5B;AAAA,aAAf,CAAb;AAHY;AAAA;;AAAA;AAAA;AAAA;AAOZR,YAAAA,OAAO,CAACC,GAAR;;AAPY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAjBA;;AAAA,OA4BhBS,UA5BgB,GA4BH,kBAAQC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEHC,GAAG,CAACC,MAAJ,YAAoBF,MAApB,CAFG;;AAAA;AAIT,YAAA,KAAI,CAACL,KAAL,GAAa,KAAI,CAACA,KAAL,CAAWQ,MAAX,CAAkB,UAACC,IAAD;AAAA,qBAAUA,IAAI,CAACN,GAAL,KAAaE,MAAvB;AAAA,aAAlB,CAAb;AAJS;AAAA;;AAAA;AAAA;AAAA;AAMTX,YAAAA,OAAO,CAACC,GAAR;;AANS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GA5BG;;AACVV,EAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH,C;;AAwCH,IAAMyB,YAAY,GAAG,IAAIvB,YAAJ,EAArB;AACAuB,YAAY,CAACpB,aAAb;AACA,eAAeoB,YAAf","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { makeAutoObservable } from \"mobx\";\nimport { instance } from \"./instance\";\n\nclass ProfileStore {\n\n    profiles = [];\n    isLoading = true;\n\n    constructor() {\n        makeAutoObservable(this);\n    }\n\n\n  fetchProfiles = async () => {\n    try {\n        const response = await instance.get(\"/profile\"); \n        this.profiles = response.data;\n        this.isLoading = false;\n      } catch (error) {\n        console.log(\"ProfileStore -> fetchProfiles -> error\", error);\n      }\n  };\n\n\n  \n  updateProfile = async (updatedProfile) => {\n    try {\n      const res = await instance.put(`/profile/me}`, updatedProfile);\n      this.trips = this.trips.map((profile) =>\n        this.profiles._id === updatedProfile._id ? res.data : profile\n      );\n    } catch (error) {\n      console.log( error);\n    }\n  };\n\n  deleteTrip = async ( tripId) => {\n    try {\n      await api.delete(`/trip/${tripId}`);\n\n      this.trips = this.trips.filter((trip) => trip._id !== tripId);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\n\n\n  \n\n  const profileStore = new ProfileStore();\n  profileStore.fetchProfiles();\n  export default profileStore;\n\n"]},"metadata":{},"sourceType":"module"}