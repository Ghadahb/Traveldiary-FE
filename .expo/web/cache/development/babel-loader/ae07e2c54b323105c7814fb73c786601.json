{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport { Button, Modal, FormControl, Input, Center, Spinner, Form, NativeBaseProvider } from \"native-base\";\nimport { useState } from \"react\";\nimport tripStore from \"../../store/tripStore\";\nimport { observer } from \"mobx-react\";\nimport authStore from \"../../store/authStore\";\n\nvar TripUpdateModal = function TripUpdateModal(_ref) {\n  var trip = _ref.trip;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showModal = _useState2[0],\n      setShowModal = _useState2[1];\n\n  var _useState3 = useState({\n    name: tripId.name\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      updatedTrip = _useState4[0],\n      setUpdatedTrip = _useState4[1];\n\n  var handleUpdate = function handleUpdate() {\n    tripStore.updateTrip(tripId, updatedTrip);\n    console.log();\n  };\n\n  return React.createElement(Center, {\n    flex: 1,\n    px: \"3\"\n  }, React.createElement(React.Fragment, null, React.createElement(Button, {\n    onPress: function onPress() {\n      return setShowModal(true);\n    }\n  }, \"Update\"), React.createElement(Modal, {\n    isOpen: showModal,\n    onClose: function onClose() {\n      return setShowModal(false);\n    }\n  }, React.createElement(Modal.Content, {\n    maxWidth: \"400px\"\n  }, React.createElement(Modal.CloseButton, null), React.createElement(Modal.Header, null, \"Update your Trip\"), React.createElement(Modal.Body, null, React.createElement(FormControl, null, React.createElement(FormControl.Label, null, \"Title\"), React.createElement(Input, {\n    onChangeText: function onChangeText(name) {\n      return setUpdatedTrip(_objectSpread(_objectSpread({}, trip), {}, {\n        name: name\n      }));\n    }\n  }))), React.createElement(Modal.Footer, null, React.createElement(Button.Group, {\n    space: 2\n  }, React.createElement(Button, {\n    variant: \"ghost\",\n    colorScheme: \"blueGray\",\n    onPress: function onPress() {\n      setShowModal(false);\n    }\n  }, \"Cancel\"), React.createElement(Button, {\n    onPress: handleUpdate\n  }, \"save\")))))));\n};\n\nexport default observer(TripUpdateModal);","map":{"version":3,"sources":["/Users/abdullahalkhaldi/Development/Traveldiary-ProjectFE-Final/Components/trips/TripUpdateModal.js"],"names":["React","Button","Modal","FormControl","Input","Center","Spinner","Form","NativeBaseProvider","useState","tripStore","observer","authStore","TripUpdateModal","trip","showModal","setShowModal","name","tripId","updatedTrip","setUpdatedTrip","handleUpdate","updateTrip","console","log"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,MADF,EAEEC,KAFF,EAGEC,WAHF,EAIEC,KAJF,EAKEC,MALF,EAMEC,OANF,EAOEC,IAPF,EAQEC,kBARF,QASO,aATP;AAUA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,SAAP;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAOC,SAAP;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAAY;AAAA,MAAVC,IAAU,QAAVA,IAAU;;AAClC,kBAAkCL,QAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,MAAOM,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAAsCP,QAAQ,CAAC;AAC3CQ,IAAAA,IAAI,EAAEC,MAAM,CAACD;AAD8B,GAAD,CAA9C;AAAA;AAAA,MAAOE,WAAP;AAAA,MAAoBC,cAApB;;AAIF,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBX,IAAAA,SAAS,CAACY,UAAV,CAAqBJ,MAArB,EAA6BC,WAA7B;AACAI,IAAAA,OAAO,CAACC,GAAR;AACD,GAHD;;AAKE,SACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,CAAd;AAAiB,IAAA,EAAE,EAAC;AAApB,KACE,0CACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMR,YAAY,CAAC,IAAD,CAAlB;AAAA;AAAjB,cADF,EAEE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAED,SAAf;AAA0B,IAAA,OAAO,EAAE;AAAA,aAAMC,YAAY,CAAC,KAAD,CAAlB;AAAA;AAAnC,KACE,oBAAC,KAAD,CAAO,OAAP;AAAe,IAAA,QAAQ,EAAC;AAAxB,KACE,oBAAC,KAAD,CAAO,WAAP,OADF,EAEE,oBAAC,KAAD,CAAO,MAAP,2BAFF,EAGE,oBAAC,KAAD,CAAO,IAAP,QACE,oBAAC,WAAD,QACE,oBAAC,WAAD,CAAa,KAAb,gBADF,EAEE,oBAAC,KAAD;AAAO,IAAA,YAAY,EAAE,sBAACC,IAAD;AAAA,aAAUG,cAAc,iCAAMN,IAAN;AAAYG,QAAAA,IAAI,EAAJA;AAAZ,SAAxB;AAAA;AAArB,IAFF,CADF,CAHF,EAkBE,oBAAC,KAAD,CAAO,MAAP,QACE,oBAAC,MAAD,CAAQ,KAAR;AAAc,IAAA,KAAK,EAAE;AAArB,KACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,OADV;AAEE,IAAA,WAAW,EAAC,UAFd;AAGE,IAAA,OAAO,EAAE,mBAAM;AACbD,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AALH,cADF,EAUE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEK;AAAjB,YAVF,CADF,CAlBF,CADF,CAFF,CADF,CADF;AA0CD,CArDD;;AAuDA,eAAeV,QAAQ,CAACE,eAAD,CAAvB","sourcesContent":["import React from \"react\";\nimport {\n  Button,\n  Modal,\n  FormControl,\n  Input,\n  Center,\n  Spinner,\n  Form,\n  NativeBaseProvider,\n} from \"native-base\";\nimport { useState } from \"react\";\nimport tripStore from \"../../store/tripStore\";\nimport { observer } from \"mobx-react\";\nimport authStore from \"../../store/authStore\";\n\nconst TripUpdateModal = ({trip}) => {\n  const [showModal, setShowModal] = useState(false);\n  const [updatedTrip, setUpdatedTrip] = useState({\n      name: tripId.name, \n    }\n);\nconst handleUpdate = () => {\n  tripStore.updateTrip(tripId, updatedTrip);\n  console.log();\n};\n \n  return (\n    <Center flex={1} px=\"3\">\n      <>\n        <Button onPress={() => setShowModal(true)}>Update</Button>\n        <Modal isOpen={showModal} onClose={() => setShowModal(false)}>\n          <Modal.Content maxWidth=\"400px\">\n            <Modal.CloseButton />\n            <Modal.Header>Update your Trip</Modal.Header>\n            <Modal.Body>\n              <FormControl>\n                <FormControl.Label>Title</FormControl.Label>\n                <Input onChangeText={(name) => setUpdatedTrip({ ...trip, name })} />\n              </FormControl>\n              {/* <FormControl mt=\"3\"> */}\n                {/* <FormControl.Label>Photo</FormControl.Label>\n                <Input\n                  name=\"image\"\n                  type=\"file\"\n                  onChangeText={(image) => setUpdatedTrip({ ...trip, image })}\n                />\n              </FormControl> */}\n            </Modal.Body>\n\n            <Modal.Footer>\n              <Button.Group space={2}>\n                <Button\n                  variant=\"ghost\"\n                  colorScheme=\"blueGray\"\n                  onPress={() => {\n                    setShowModal(false);\n                  }}\n                >\n                  Cancel\n                </Button>\n                <Button onPress={handleUpdate}>save</Button>\n              </Button.Group>\n            </Modal.Footer>\n          </Modal.Content>\n        </Modal>\n      </>\n    </Center>\n  );\n};\n\nexport default observer(TripUpdateModal);"]},"metadata":{},"sourceType":"module"}