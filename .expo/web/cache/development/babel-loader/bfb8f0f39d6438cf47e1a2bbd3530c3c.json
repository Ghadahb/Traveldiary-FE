{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { makeAutoObservable } from \"mobx\";\nimport { instance } from \"./instance\";\n\nvar TripStore = function TripStore() {\n  var _this = this;\n\n  _classCallCheck(this, TripStore);\n\n  this.trips = [];\n  this.isLoading = true;\n\n  this.fetchTrips = function _callee() {\n    var response;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(instance.get(\"/trip\"));\n\n          case 3:\n            response = _context.sent;\n            _this.trips = response.data;\n            _this.isLoading = false;\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"TripStore -> fetchTrips -> error\", _context.t0);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  makeAutoObservable(this);\n};\n\nvar tripStore = new TripStore();\ntripStore.fetchTrips();\nexport default tripStore;\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["/Users/ghadah/Development/Traveldiary-ProjectFE-Final/store/tripStore.js"],"names":["React","makeAutoObservable","instance","TripStore","trips","isLoading","fetchTrips","get","response","data","console","log","tripStore","styles","StyleSheet","create"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,kBAAT,QAAmC,MAAnC;AACA,SAASC,QAAT;;IAEMC,S,GAKF,qBAAc;AAAA;;AAAA;;AAAA,OAHdC,KAGc,GAHN,EAGM;AAAA,OAFdC,SAEc,GAFF,IAEE;;AAAA,OAKhBC,UALgB,GAKH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEgBJ,QAAQ,CAACK,GAAT,CAAa,OAAb,CAFhB;;AAAA;AAEDC,YAAAA,QAFC;AAIP,YAAA,KAAI,CAACJ,KAAL,GAAaI,QAAQ,CAACC,IAAtB;AACA,YAAA,KAAI,CAACJ,SAAL,GAAiB,KAAjB;AALO;AAAA;;AAAA;AAAA;AAAA;AAOPK,YAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;;AAPO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GALG;;AACVV,EAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH,C;;AAgBH,IAAMW,SAAS,GAAG,IAAIT,SAAJ,EAAlB;AACAS,SAAS,CAACN,UAAV;AACA,eAAeM,SAAf;AAEF,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { makeAutoObservable } from \"mobx\";\nimport { instance } from \"./instance\";\n\nclass TripStore {\n\n    trips = [];\n    isLoading = true;\n\n    constructor() {\n        makeAutoObservable(this);\n    }\n\n\n  fetchTrips = async () => {\n    try {\n        const response = await instance.get(\"/trip\"); \n        // check s\n        this.trips = response.data;\n        this.isLoading = false;\n      } catch (error) {\n        console.log(\"TripStore -> fetchTrips -> error\", error);\n      }\n  };\n}\n  \n\n  const tripStore = new TripStore();\n  tripStore.fetchTrips();\n  export default tripStore;\n\nconst styles = StyleSheet.create({})\n"]},"metadata":{},"sourceType":"module"}