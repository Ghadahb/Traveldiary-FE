{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport { Box, Text, Heading, VStack, FormControl, Input, Link, Button, HStack, Center, useToast } from \"native-base\";\nimport authStore from \"../../store/authStore\";\n\nvar Signup = function Signup(_ref) {\n  var navigation = _ref.navigation;\n  var toast = useToast();\n\n  var _useState = useState({\n    username: \"\",\n    password: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var handleSubmit = function handleSubmit() {\n    authStore.signup(user, navigation, toast);\n    navigation.replace(\"Home\");\n  };\n\n  return React.createElement(Center, {\n    flex: 1,\n    px: \"3\"\n  }, React.createElement(Box, {\n    safeArea: true,\n    p: \"2\",\n    py: \"8\",\n    w: \"90%\",\n    maxW: \"290\"\n  }, React.createElement(Heading, {\n    size: \"lg\",\n    fontWeight: \"600\",\n    color: \"coolGray.800\",\n    _dark: {\n      color: \"warmGray.50\"\n    }\n  }, \"Welcome\"), React.createElement(Heading, {\n    mt: \"1\",\n    _dark: {\n      color: \"warmGray.200\"\n    },\n    color: \"coolGray.600\",\n    fontWeight: \"medium\",\n    size: \"xs\"\n  }, \"Sign up to continue!\"), React.createElement(VStack, {\n    space: 3,\n    mt: \"5\"\n  }, React.createElement(FormControl, null, React.createElement(FormControl.Label, null, \"Username\"), React.createElement(Input, {\n    onChangeText: function onChangeText(username) {\n      return setUser(_objectSpread(_objectSpread({}, user), {}, {\n        username: username\n      }));\n    }\n  })), React.createElement(FormControl, null, React.createElement(FormControl.Label, null, \"Password\"), React.createElement(Input, {\n    type: \"password\",\n    onChangeText: function onChangeText(password) {\n      return setUser(_objectSpread(_objectSpread({}, user), {}, {\n        password: password\n      }));\n    }\n  }), React.createElement(Link, {\n    _text: {\n      fontSize: \"xs\",\n      fontWeight: \"500\",\n      color: \"indigo.500\"\n    },\n    alignSelf: \"flex-end\",\n    mt: \"1\"\n  }, \"Forget Password?\")), React.createElement(Button, {\n    mt: \"2\",\n    colorScheme: \"indigo\",\n    onPress: handleSubmit,\n    backgroundColor: \"#0000ff\"\n  }, \"Sign up\"), React.createElement(HStack, {\n    mt: \"6\",\n    justifyContent: \"center\"\n  }, React.createElement(Text, {\n    fontSize: \"sm\",\n    color: \"coolGray.600\",\n    _dark: {\n      color: \"warmGray.200\"\n    }\n  }, \"I already have an account.\"), React.createElement(Link, {\n    _text: {\n      color: \"indigo.500\",\n      fontWeight: \"medium\",\n      fontSize: \"sm\"\n    },\n    onPress: function onPress() {\n      return navigation.navigate(\"Signin\");\n    }\n  }, \"Sign in\")))));\n};\n\nexport default Signup;","map":{"version":3,"sources":["C:/Users/hamsa/developmint/Traveldiary-ProjectFE-Final/Components/authentication/Signup.js"],"names":["React","useState","Box","Text","Heading","VStack","FormControl","Input","Link","Button","HStack","Center","useToast","authStore","Signup","navigation","toast","username","password","user","setUser","handleSubmit","signup","replace","color","fontSize","fontWeight","navigate"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Text,\r\n  Heading,\r\n  VStack,\r\n  FormControl,\r\n  Input,\r\n  Link,\r\n  Button,\r\n  HStack,\r\n  Center,\r\n  useToast,\r\n} from \"native-base\"\r\nimport authStore from \"../../store/authStore\";\r\n\r\nconst Signup = ({ navigation }) => {\r\n  const toast = useToast()\r\n    const [user, setUser] = useState({\r\n        username: \"\",\r\n        password: \"\",\r\n    });\r\n\r\n    const handleSubmit = () => {\r\n        authStore.signup(user, navigation, toast);\r\n        navigation.replace(\"Home\");\r\n    };\r\n  return (\r\n    <Center flex={1} px=\"3\">\r\n    <Box safeArea p=\"2\" py=\"8\" w=\"90%\" maxW=\"290\">\r\n      <Heading\r\n        size=\"lg\"\r\n        fontWeight=\"600\"\r\n        color=\"coolGray.800\"\r\n        _dark={{\r\n          color: \"warmGray.50\",\r\n        }}\r\n      >\r\n        Welcome\r\n      </Heading>\r\n      <Heading\r\n        mt=\"1\"\r\n        _dark={{\r\n          color: \"warmGray.200\",\r\n        }}\r\n        color=\"coolGray.600\"\r\n        fontWeight=\"medium\"\r\n        size=\"xs\"\r\n      >\r\n        Sign up to continue!\r\n      </Heading>\r\n\r\n      <VStack space={3} mt=\"5\">\r\n        <FormControl>\r\n          <FormControl.Label>Username</FormControl.Label>\r\n          <Input \r\n          onChangeText={(username) => setUser({...user, username})}\r\n          />\r\n        </FormControl>\r\n        <FormControl>\r\n          <FormControl.Label>Password</FormControl.Label>\r\n          <Input type=\"password\"\r\n          onChangeText={(password) => setUser({...user, password})}\r\n           />\r\n          <Link\r\n            _text={{\r\n              fontSize: \"xs\",\r\n              fontWeight: \"500\",\r\n              color: \"indigo.500\",\r\n            }}\r\n            alignSelf=\"flex-end\"\r\n            mt=\"1\"\r\n          >\r\n            Forget Password?\r\n          </Link>\r\n        </FormControl>\r\n        <Button \r\n        mt=\"2\" \r\n        colorScheme=\"indigo\" \r\n        onPress={handleSubmit}\r\n        backgroundColor=\"#0000ff\">\r\n          Sign up\r\n        </Button>\r\n        <HStack mt=\"6\" justifyContent=\"center\">\r\n          <Text\r\n            fontSize=\"sm\"\r\n            color=\"coolGray.600\"\r\n            _dark={{\r\n              color: \"warmGray.200\",\r\n            }}\r\n          >\r\n            I already have an account.\r\n          </Text>\r\n          <Link\r\n            _text={{\r\n              color: \"indigo.500\",\r\n              fontWeight: \"medium\",\r\n              fontSize: \"sm\",\r\n            }}\r\n            onPress={() => navigation.navigate(\"Signin\")}\r\n          >\r\n            Sign in\r\n          </Link>\r\n        </HStack>\r\n      </VStack>\r\n      </Box>\r\n      </Center>\r\n    \r\n  )\r\n}\r\n\r\nexport default Signup;\r\n\r\n// export default () => {\r\n//   return (\r\n//     <NativeBaseProvider>\r\n//       <Center flex={1} px=\"3\">\r\n//         <Example />\r\n//       </Center>\r\n//     </NativeBaseProvider>\r\n//   )\r\n// }"]},"metadata":{},"sourceType":"module"}