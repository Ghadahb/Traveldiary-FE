{"ast":null,"code":"import { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Home from \"./Components/home/Home\";\nimport RootNavigator from \"./Components/navigation\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { NativeBaseProvider } from \"native-base\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { ThemeProvider } from \"styled-components\";\nimport Profile from \"./Components/user/Profile\";\nimport Travels from \"./Components/trips/TripItem\";\nexport default function App() {\n  var Stack = createStackNavigator();\n  return React.createElement(NativeBaseProvider, null, React.createElement(NavigationContainer, null, React.createElement(RootNavigator, null), React.createElement(Tab.Navigator, {\n    tabBarOptions: {\n      showLabel: false,\n      style: {\n        backgroundColor: 'white',\n        position: 'absolute',\n        bottom: 40,\n        marginHorizontal: 20,\n        height: 60,\n        borderRadius: 10,\n        shadowColor: '#000',\n        shadowOpacity: 0.06,\n        shadowOffset: {\n          width: 10,\n          height: 10\n        },\n        paddingHorizontal: 20\n      }\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Home\",\n    component: HomeScreen,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref) {\n        var focused = _ref.focused;\n        return React.createElement(View, {\n          style: {\n            position: 'absolute',\n            top: 20\n          }\n        }, React.createElement(FontAwesome5, {\n          name: \"home\",\n          size: 20,\n          color: focused ? 'red' : 'gray'\n        }));\n      }\n    },\n    listeners: function listeners(_ref2) {\n      var navigation = _ref2.navigation,\n          route = _ref2.route;\n      return {\n        tabPress: function tabPress(e) {\n          Animated.spring(tabOffsetValue, {\n            toValue: 0,\n            useNativeDriver: true\n          }).start();\n        }\n      };\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Search\",\n    component: SearchScreen,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref3) {\n        var focused = _ref3.focused;\n        return React.createElement(View, {\n          style: {\n            position: 'absolute',\n            top: 20\n          }\n        }, React.createElement(FontAwesome5, {\n          name: \"search\",\n          size: 20,\n          color: focused ? 'red' : 'gray'\n        }));\n      }\n    },\n    listeners: function listeners(_ref4) {\n      var navigation = _ref4.navigation,\n          route = _ref4.route;\n      return {\n        tabPress: function tabPress(e) {\n          Animated.spring(tabOffsetValue, {\n            toValue: getWidth(),\n            useNativeDriver: true\n          }).start();\n        }\n      };\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"ActionButton\",\n    component: EmptyScreen,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref5) {\n        var focused = _ref5.focused;\n        return React.createElement(TouchableOpacity, null, React.createElement(View, {\n          style: {\n            width: 55,\n            height: 55,\n            backgroundColor: 'red',\n            borderRadius: 30,\n            justifyContent: 'center',\n            alignItems: 'center',\n            marginBottom: Platform.OS == \"android\" ? 50 : 30\n          }\n        }, React.createElement(Image, {\n          source: plus,\n          style: {\n            width: 22,\n            height: 22,\n            tintColor: 'white'\n          }\n        })));\n      }\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Notifications\",\n    component: NotificationScreen,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref6) {\n        var focused = _ref6.focused;\n        return React.createElement(View, {\n          style: {\n            position: 'absolute',\n            top: 20\n          }\n        }, React.createElement(FontAwesome5, {\n          name: \"bell\",\n          size: 20,\n          color: focused ? 'red' : 'gray'\n        }));\n      }\n    },\n    listeners: function listeners(_ref7) {\n      var navigation = _ref7.navigation,\n          route = _ref7.route;\n      return {\n        tabPress: function tabPress(e) {\n          Animated.spring(tabOffsetValue, {\n            toValue: getWidth() * 3,\n            useNativeDriver: true\n          }).start();\n        }\n      };\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Settings\",\n    component: SettingsScreen,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref8) {\n        var focused = _ref8.focused;\n        return React.createElement(View, {\n          style: {\n            position: 'absolute',\n            top: 20\n          }\n        }, React.createElement(FontAwesome5, {\n          name: \"user-alt\",\n          size: 20,\n          color: focused ? 'red' : 'gray'\n        }));\n      }\n    },\n    listeners: function listeners(_ref9) {\n      var navigation = _ref9.navigation,\n          route = _ref9.route;\n      return {\n        tabPress: function tabPress(e) {\n          Animated.spring(tabOffsetValue, {\n            toValue: getWidth() * 4,\n            useNativeDriver: true\n          }).start();\n        }\n      };\n    }\n  }))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["/Users/abdullahalkhaldi/Development/Traveldiary-ProjectFE-Final/App.js"],"names":["StatusBar","React","Home","RootNavigator","createStackNavigator","NativeBaseProvider","NavigationContainer","ThemeProvider","Profile","Travels","App","Stack","showLabel","style","backgroundColor","position","bottom","marginHorizontal","height","borderRadius","shadowColor","shadowOpacity","shadowOffset","width","paddingHorizontal","HomeScreen","tabBarIcon","focused","top","navigation","route","tabPress","e","Animated","spring","tabOffsetValue","toValue","useNativeDriver","start","SearchScreen","getWidth","EmptyScreen","justifyContent","alignItems","marginBottom","Platform","OS","plus","tintColor","NotificationScreen","SettingsScreen","styles","StyleSheet","create","container","flex"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport Home from \"./Components/home/Home\";\nimport RootNavigator from \"./Components/navigation\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { NativeBaseProvider } from \"native-base\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { ThemeProvider } from \"styled-components\";\nimport Profile from \"./Components/user/Profile\";\nimport Travels from \"./Components/trips/TripItem\";\n\n\nexport default function App() {\n  const Stack = createStackNavigator();\n  return (\n    <NativeBaseProvider>\n      <NavigationContainer>\n        {/* <Home /> */}\n        <RootNavigator />\n        <Tab.Navigator tabBarOptions={{\n        showLabel: false,\n        // Floating Tab Bar...\n        style: {\n          backgroundColor: 'white',\n          position: 'absolute',\n          bottom: 40,\n          marginHorizontal: 20,\n          // Max Height...\n          height: 60,\n          borderRadius: 10,\n          // Shadow...\n          shadowColor: '#000',\n          shadowOpacity: 0.06,\n          shadowOffset: {\n            width: 10,\n            height: 10\n          },\n          paddingHorizontal: 20,\n        }\n      }}>\n\n        {\n          // Tab Screens....\n\n          // Tab ICons....\n        }\n        <Tab.Screen name={\"Home\"} component={HomeScreen} options={{\n          tabBarIcon: ({ focused }) => (\n            <View style={{\n              // centring Tab Button...\n              position: 'absolute',\n              top: 20\n            }}>\n              <FontAwesome5\n                name=\"home\"\n                size={20}\n                color={focused ? 'red' : 'gray'}\n              ></FontAwesome5>\n            </View>\n          )\n        }} listeners={({ navigation, route }) => ({\n          // Onpress Update....\n          tabPress: e => {\n            Animated.spring(tabOffsetValue, {\n              toValue: 0,\n              useNativeDriver: true\n            }).start();\n          }\n        })}></Tab.Screen>\n\n        <Tab.Screen name={\"Search\"} component={SearchScreen} options={{\n          tabBarIcon: ({ focused }) => (\n            <View style={{\n              // centring Tab Button...\n              position: 'absolute',\n              top: 20\n            }}>\n              <FontAwesome5\n                name=\"search\"\n                size={20}\n                color={focused ? 'red' : 'gray'}\n              ></FontAwesome5>\n            </View>\n          )\n        }} listeners={({ navigation, route }) => ({\n          // Onpress Update....\n          tabPress: e => {\n            Animated.spring(tabOffsetValue, {\n              toValue: getWidth(),\n              useNativeDriver: true\n            }).start();\n          }\n        })}></Tab.Screen>\n\n\n        {\n\n          // Extra Tab Screen For Action Button..\n        }\n\n        <Tab.Screen name={\"ActionButton\"} component={EmptyScreen} options={{\n          tabBarIcon: ({ focused }) => (\n\n            <TouchableOpacity>\n              <View style={{\n                width: 55,\n                height: 55,\n                backgroundColor: 'red',\n                borderRadius: 30,\n                justifyContent: 'center',\n                alignItems: 'center',\n                marginBottom: Platform.OS == \"android\" ? 50 : 30\n              }}>\n                <Image source={plus} style={{\n                  width: 22,\n                  height: 22,\n                  tintColor: 'white',\n                }}></Image>\n              </View>\n            </TouchableOpacity>\n          )\n        }}></Tab.Screen>\n\n        <Tab.Screen name={\"Notifications\"} component={NotificationScreen} options={{\n          tabBarIcon: ({ focused }) => (\n            <View style={{\n              // centring Tab Button...\n              position: 'absolute',\n              top: 20\n            }}>\n              <FontAwesome5\n                name=\"bell\"\n                size={20}\n                color={focused ? 'red' : 'gray'}\n              ></FontAwesome5>\n            </View>\n          )\n        }} listeners={({ navigation, route }) => ({\n          // Onpress Update....\n          tabPress: e => {\n            Animated.spring(tabOffsetValue, {\n              toValue: getWidth() * 3,\n              useNativeDriver: true\n            }).start();\n          }\n        })}></Tab.Screen>\n\n        <Tab.Screen name={\"Settings\"} component={SettingsScreen} options={{\n          tabBarIcon: ({ focused }) => (\n            <View style={{\n              // centring Tab Button...\n              position: 'absolute',\n              top: 20\n            }}>\n              <FontAwesome5\n                name=\"user-alt\"\n                size={20}\n                color={focused ? 'red' : 'gray'}\n              ></FontAwesome5>\n            </View>\n          )\n        }} listeners={({ navigation, route }) => ({\n          // Onpress Update....\n          tabPress: e => {\n            Animated.spring(tabOffsetValue, {\n              toValue: getWidth() * 4,\n              useNativeDriver: true\n            }).start();\n          }\n        })}></Tab.Screen>\n\n      </Tab.Navigator>\n\n      \n      </NavigationContainer>\n    </NativeBaseProvider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}