{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { makeAutoObservable } from \"mobx\";\nimport { instance } from \"./instance\";\n\nvar ProfileStore = function ProfileStore() {\n  var _this = this;\n\n  _classCallCheck(this, ProfileStore);\n\n  this.profiles = [];\n  this.isLoading = true;\n\n  this.fetchProfiles = function _callee() {\n    var response;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(instance.get(\"/profile\"));\n\n          case 3:\n            response = _context.sent;\n            _this.profiles = response.data;\n            _this.isLoading = false;\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"ProfileStore -> fetchProfiles -> error\", _context.t0);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  this.createTrip = function _callee2(newTrip) {\n    var formData, key, response;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            formData = new FormData();\n\n            for (key in newTrip) {\n              formData.append(key, newTrip[key]);\n            }\n\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(instance.post(\"/trips\", formData));\n\n          case 5:\n            response = _context2.sent;\n\n            _this.trips.push(response.data);\n\n            _this.isLoading = false;\n            _context2.next = 13;\n            break;\n\n          case 10:\n            _context2.prev = 10;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(\"ðŸš€ ~ file: tripStore.js ~ line 16 ~ TripStore ~ createTrip= ~ error\", _context2.t0);\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n\n  this.updateProfile = function _callee3(updatedProfile) {\n    var res;\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(instance.put(\"/profile/me}\", updatedProfile));\n\n          case 3:\n            res = _context3.sent;\n            _this.trips = _this.trips.map(function (trip) {\n              return pro._id === updatedProfile._id ? res.data : trip;\n            });\n            _context3.next = 10;\n            break;\n\n          case 7:\n            _context3.prev = 7;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.log(\"tripStore -> updateTrip -> error\", _context3.t0);\n\n          case 10:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  this.deleteTrip = function _callee4(tripId) {\n    return _regeneratorRuntime.async(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return _regeneratorRuntime.awrap(api.delete(\"/trip/\" + tripId));\n\n          case 3:\n            _this.trips = _this.trips.filter(function (trip) {\n              return trip._id !== tripId;\n            });\n            _context4.next = 9;\n            break;\n\n          case 6:\n            _context4.prev = 6;\n            _context4.t0 = _context4[\"catch\"](0);\n            console.log(_context4.t0);\n\n          case 9:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n\n  makeAutoObservable(this);\n};\n\nvar profileStore = new ProfileStore();\nprofileStore.fetchProfiles();\nexport default profileStore;","map":{"version":3,"sources":["/Users/abdullahalkhaldi/Development/Traveldiary-ProjectFE-Final/store/profileStore.js"],"names":["React","makeAutoObservable","instance","ProfileStore","profiles","isLoading","fetchProfiles","get","response","data","console","log","createTrip","newTrip","formData","FormData","key","append","post","trips","push","updateProfile","updatedProfile","put","res","map","trip","pro","_id","deleteTrip","tripId","api","delete","filter","profileStore"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,kBAAT,QAAmC,MAAnC;AACA,SAASC,QAAT;;IAEMC,Y,GAKF,wBAAc;AAAA;;AAAA;;AAAA,OAHdC,QAGc,GAHH,EAGG;AAAA,OAFdC,SAEc,GAFF,IAEE;;AAAA,OAKhBC,aALgB,GAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEaJ,QAAQ,CAACK,GAAT,CAAa,UAAb,CAFb;;AAAA;AAEJC,YAAAA,QAFI;AAGV,YAAA,KAAI,CAACJ,QAAL,GAAgBI,QAAQ,CAACC,IAAzB;AACA,YAAA,KAAI,CAACJ,SAAL,GAAiB,KAAjB;AAJU;AAAA;;AAAA;AAAA;AAAA;AAMVK,YAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ;;AANU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GALA;;AAAA,OAehBC,UAfgB,GAeH,kBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEHC,YAAAA,QAFG,GAEQ,IAAIC,QAAJ,EAFR;;AAGT,iBAAWC,GAAX,IAAkBH,OAAlB,EAA2B;AACzBC,cAAAA,QAAQ,CAACG,MAAT,CAAgBD,GAAhB,EAAqBH,OAAO,CAACG,GAAD,CAA5B;AACD;;AALQ;AAAA,6CAMcd,QAAQ,CAACgB,IAAT,CAAc,QAAd,EAAwBJ,QAAxB,CANd;;AAAA;AAMHN,YAAAA,QANG;;AAOT,YAAA,KAAI,CAACW,KAAL,CAAWC,IAAX,CAAgBZ,QAAQ,CAACC,IAAzB;;AACA,YAAA,KAAI,CAACJ,SAAL,GAAgB,KAAhB;AARS;AAAA;;AAAA;AAAA;AAAA;AAUTK,YAAAA,OAAO,CAACC,GAAR,CACE,qEADF;;AAVS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAfG;;AAAA,OAgChBU,aAhCgB,GAgCA,kBAAOC,cAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEMpB,QAAQ,CAACqB,GAAT,iBAA6BD,cAA7B,CAFN;;AAAA;AAENE,YAAAA,GAFM;AAGZ,YAAA,KAAI,CAACL,KAAL,GAAa,KAAI,CAACA,KAAL,CAAWM,GAAX,CAAe,UAACC,IAAD;AAAA,qBAC1BC,GAAG,CAACC,GAAJ,KAAYN,cAAc,CAACM,GAA3B,GAAiCJ,GAAG,CAACf,IAArC,GAA4CiB,IADlB;AAAA,aAAf,CAAb;AAHY;AAAA;;AAAA;AAAA;AAAA;AAOZhB,YAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;;AAPY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAhCA;;AAAA,OA2ChBkB,UA3CgB,GA2CH,kBAAQC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEHC,GAAG,CAACC,MAAJ,YAAoBF,MAApB,CAFG;;AAAA;AAIT,YAAA,KAAI,CAACX,KAAL,GAAa,KAAI,CAACA,KAAL,CAAWc,MAAX,CAAkB,UAACP,IAAD;AAAA,qBAAUA,IAAI,CAACE,GAAL,KAAaE,MAAvB;AAAA,aAAlB,CAAb;AAJS;AAAA;;AAAA;AAAA;AAAA;AAMTpB,YAAAA,OAAO,CAACC,GAAR;;AANS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GA3CG;;AACVV,EAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH,C;;AAuDH,IAAMiC,YAAY,GAAG,IAAI/B,YAAJ,EAArB;AACA+B,YAAY,CAAC5B,aAAb;AACA,eAAe4B,YAAf","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { makeAutoObservable } from \"mobx\";\nimport { instance } from \"./instance\";\n\nclass ProfileStore {\n\n    profiles = [];\n    isLoading = true;\n\n    constructor() {\n        makeAutoObservable(this);\n    }\n\n\n  fetchProfiles = async () => {\n    try {\n        const response = await instance.get(\"/profile\"); \n        this.profiles = response.data;\n        this.isLoading = false;\n      } catch (error) {\n        console.log(\"ProfileStore -> fetchProfiles -> error\", error);\n      }\n  };\n\n  createTrip = async (newTrip) => {\n    try {\n      const formData = new FormData();\n      for (const key in newTrip) {\n        formData.append(key, newTrip[key]);\n      }\n      const response = await instance.post(\"/trips\", formData);\n      this.trips.push(response.data);\n      this.isLoading= false\n    } catch (error) {\n      console.log(\n        \"ðŸš€ ~ file: tripStore.js ~ line 16 ~ TripStore ~ createTrip= ~ error\",\n        error\n      );\n    }\n  };\n  \n  updateProfile = async (updatedProfile) => {\n    try {\n      const res = await instance.put(`/profile/me}`, updatedProfile);\n      this.trips = this.trips.map((trip) =>\n        pro._id === updatedProfile._id ? res.data : trip\n      );\n    } catch (error) {\n      console.log(\"tripStore -> updateTrip -> error\", error);\n    }\n  };\n\n  deleteTrip = async ( tripId) => {\n    try {\n      await api.delete(`/trip/${tripId}`);\n\n      this.trips = this.trips.filter((trip) => trip._id !== tripId);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\n\n\n  \n\n  const profileStore = new ProfileStore();\n  profileStore.fetchProfiles();\n  export default profileStore;\n\n"]},"metadata":{},"sourceType":"module"}