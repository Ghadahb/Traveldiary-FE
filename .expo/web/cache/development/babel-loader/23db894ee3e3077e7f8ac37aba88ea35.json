{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { makeAutoObservable } from \"mobx\";\nimport { instance } from \"./instance\";\n\nvar ProfileStore = function ProfileStore() {\n  var _this = this;\n\n  _classCallCheck(this, ProfileStore);\n\n  this.profiles = [];\n  this.isLoading = true;\n\n  this.fetchProfiles = function _callee() {\n    var response;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(instance.get(\"/profile\"));\n\n          case 3:\n            response = _context.sent;\n            _this.profiles = response.data;\n            _this.isLoading = false;\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"ProfileStore -> fetchProfiles -> error\", _context.t0);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  this.createTrip = function _callee2(newTrip) {\n    var formData, key, response;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            formData = new FormData();\n\n            for (key in newTrip) {\n              formData.append(key, newTrip[key]);\n            }\n\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(instance.post(\"/trips\", formData));\n\n          case 5:\n            response = _context2.sent;\n\n            _this.trips.push(response.data);\n\n            _this.isLoading = false;\n            _context2.next = 13;\n            break;\n\n          case 10:\n            _context2.prev = 10;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(\"ðŸš€ ~ file: tripStore.js ~ line 16 ~ TripStore ~ createTrip= ~ error\", _context2.t0);\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n\n  this.deleteTrip = function _callee3(tripId) {\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(instance.delete(\"/trips/\" + tripId));\n\n          case 3:\n            _this.trips = _this.trips.filter(function (trip) {\n              return trip._id !== productId;\n            });\n            _context3.next = 9;\n            break;\n\n          case 6:\n            _context3.prev = 6;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.log(\"ProductStore -> deleteProduct -> error\", _context3.t0);\n\n          case 9:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n\n  makeAutoObservable(this);\n};\n\nvar profileStore = new ProfileStore();\nprofileStore.fetchProfiles();\nexport default profileStore;","map":{"version":3,"sources":["C:/Users/hamsa/developmint/Traveldiary-ProjectFE-Final/store/profileStore.js"],"names":["React","makeAutoObservable","instance","ProfileStore","profiles","isLoading","fetchProfiles","get","response","data","console","log","createTrip","newTrip","formData","FormData","key","append","post","trips","push","deleteTrip","tripId","delete","filter","trip","_id","productId","profileStore"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,kBAAT,QAAmC,MAAnC;AACA,SAASC,QAAT;;IAEMC,Y,GAKF,wBAAc;AAAA;;AAAA;;AAAA,OAHdC,QAGc,GAHH,EAGG;AAAA,OAFdC,SAEc,GAFF,IAEE;;AAAA,OAKhBC,aALgB,GAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEaJ,QAAQ,CAACK,GAAT,CAAa,UAAb,CAFb;;AAAA;AAEJC,YAAAA,QAFI;AAIV,YAAA,KAAI,CAACJ,QAAL,GAAgBI,QAAQ,CAACC,IAAzB;AACA,YAAA,KAAI,CAACJ,SAAL,GAAiB,KAAjB;AALU;AAAA;;AAAA;AAAA;AAAA;AAOVK,YAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ;;AAPU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GALA;;AAAA,OAgBhBC,UAhBgB,GAgBH,kBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEHC,YAAAA,QAFG,GAEQ,IAAIC,QAAJ,EAFR;;AAGT,iBAAWC,GAAX,IAAkBH,OAAlB,EAA2B;AACzBC,cAAAA,QAAQ,CAACG,MAAT,CAAgBD,GAAhB,EAAqBH,OAAO,CAACG,GAAD,CAA5B;AACD;;AALQ;AAAA,6CAMcd,QAAQ,CAACgB,IAAT,CAAc,QAAd,EAAwBJ,QAAxB,CANd;;AAAA;AAMHN,YAAAA,QANG;;AAOT,YAAA,KAAI,CAACW,KAAL,CAAWC,IAAX,CAAgBZ,QAAQ,CAACC,IAAzB;;AACA,YAAA,KAAI,CAACJ,SAAL,GAAgB,KAAhB;AARS;AAAA;;AAAA;AAAA;AAAA;AAUTK,YAAAA,OAAO,CAACC,GAAR,CACE,qEADF;;AAVS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAhBG;;AAAA,OAkChBU,UAlCgB,GAkCH,kBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEHpB,QAAQ,CAACqB,MAAT,aAA0BD,MAA1B,CAFG;;AAAA;AAGT,YAAA,KAAI,CAACH,KAAL,GAAa,KAAI,CAACA,KAAL,CAAWK,MAAX,CACX,UAACC,IAAD;AAAA,qBAAUA,IAAI,CAACC,GAAL,KAAaC,SAAvB;AAAA,aADW,CAAb;AAHS;AAAA;;AAAA;AAAA;AAAA;AAOTjB,YAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ;;AAPS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAlCG;;AACVV,EAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH,C;;AA+CH,IAAM2B,YAAY,GAAG,IAAIzB,YAAJ,EAArB;AACAyB,YAAY,CAACtB,aAAb;AACA,eAAesB,YAAf","sourcesContent":["import React from 'react';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport { makeAutoObservable } from \"mobx\";\r\nimport { instance } from \"./instance\";\r\n\r\nclass ProfileStore {\r\n\r\n    profiles = [];\r\n    isLoading = true;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n\r\n  fetchProfiles = async () => {\r\n    try {\r\n        const response = await instance.get(\"/profile\"); \r\n        // check s\r\n        this.profiles = response.data;\r\n        this.isLoading = false;\r\n      } catch (error) {\r\n        console.log(\"ProfileStore -> fetchProfiles -> error\", error);\r\n      }\r\n  };\r\n\r\n  createTrip = async (newTrip) => {\r\n    try {\r\n      const formData = new FormData();\r\n      for (const key in newTrip) {\r\n        formData.append(key, newTrip[key]);\r\n      }\r\n      const response = await instance.post(\"/trips\", formData);\r\n      this.trips.push(response.data);\r\n      this.isLoading= false\r\n    } catch (error) {\r\n      console.log(\r\n        \"ðŸš€ ~ file: tripStore.js ~ line 16 ~ TripStore ~ createTrip= ~ error\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  \r\n\r\n  deleteTrip = async (tripId) => {\r\n    try {\r\n      await instance.delete(`/trips/${tripId}`);\r\n      this.trips = this.trips.filter(\r\n        (trip) => trip._id !== productId\r\n      );\r\n    } catch (error) {\r\n      console.log(\"ProductStore -> deleteProduct -> error\", error);\r\n    }\r\n  };\r\n}\r\n\r\n\r\n  \r\n\r\n  const profileStore = new ProfileStore();\r\n  profileStore.fetchProfiles();\r\n  export default profileStore;\r\n\r\n"]},"metadata":{},"sourceType":"module"}