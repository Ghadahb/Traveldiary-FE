{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport { Button, Modal, FormControl, Input, Center } from \"native-base\";\nimport { useState } from \"react\";\nimport tripStore from \"../../store/tripStore\";\nimport { observer } from \"mobx-react\";\nimport authStore from \"../../store/authStore\";\n\nvar TripUpdateModal = function TripUpdateModal(_ref) {\n  var Oldtrip = _ref.Oldtrip;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showModal = _useState2[0],\n      setShowModal = _useState2[1];\n\n  var _useState3 = useState({\n    name: Oldtrip.name\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      trips = _useState4[0],\n      setTrip = _useState4[1];\n\n  var handleChange = function handleChange(event) {\n    return setTrip(_objectSpread(_objectSpread({}, trip), {}, _defineProperty({}, event.target.name, event.target.value)));\n  };\n\n  var handleSubmit = function handleSubmit(event) {\n    event.preventDefault();\n    tripStore.updateTrip(trips);\n  };\n\n  var _useState5 = useState({\n    name: Oldtrip.name\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      updatedTrip = _useState6[0],\n      setUpdatedTrip = _useState6[1];\n\n  var handleUpdate = function handleUpdate(event) {\n    event.preventDefault();\n    if (Oldtrip) tripStore.updateTrip(updatedTrip, Oldtrip._id);else tripStore.createProduct(updatedTrip);\n  };\n\n  return React.createElement(Center, {\n    flex: 1,\n    px: \"3\"\n  }, React.createElement(React.Fragment, null, React.createElement(Button, {\n    onPress: function onPress() {\n      return setShowModal(true);\n    }\n  }, \"Update Trip\"), React.createElement(Modal, {\n    isOpen: showModal,\n    onClose: function onClose() {\n      return setShowModal(false);\n    }\n  }, React.createElement(Modal.Content, {\n    maxWidth: \"400px\"\n  }, React.createElement(Modal.CloseButton, null), React.createElement(Modal.Header, null, \"Update your Trip\"), React.createElement(Modal.Body, null, React.createElement(FormControl, null, React.createElement(FormControl.Label, null, \"Title\"), React.createElement(Input, {\n    onChangeText: function onChangeText(name) {\n      return setUpdatedTrip(_objectSpread(_objectSpread({}, Oldtrip), {}, {\n        name: name\n      }));\n    }\n  })), React.createElement(FormControl, {\n    mt: \"3\"\n  }, React.createElement(FormControl.Label, null, \"Photo\"), React.createElement(Input, {\n    name: \"image\",\n    type: \"file\",\n    onChangeText: function onChangeText(image) {\n      return setUpdatedTrip(_objectSpread(_objectSpread({}, trip), {}, {\n        image: image\n      }));\n    }\n  }))), React.createElement(Modal.Footer, null, React.createElement(Button.Group, {\n    space: 2\n  }, React.createElement(Button, {\n    variant: \"ghost\",\n    colorScheme: \"blueGray\",\n    onPress: function onPress() {\n      setShowModal(false);\n    }\n  }, \"Cancel\"), React.createElement(Button, {\n    onPress: handleSubmit\n  }, \"Save\")))))));\n};\n\nexport default observer(TripUpdateModal);","map":{"version":3,"sources":["/Users/abdullahalkhaldi/Development/Traveldiary-ProjectFE-Final/Components/trips/TripUpdateModal.js"],"names":["React","Button","Modal","FormControl","Input","Center","useState","tripStore","observer","authStore","TripUpdateModal","Oldtrip","showModal","setShowModal","name","trips","setTrip","handleChange","event","trip","target","value","handleSubmit","preventDefault","updateTrip","updatedTrip","setUpdatedTrip","handleUpdate","_id","createProduct","image"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Button,\n  Modal,\n  FormControl,\n  Input,\n  Center\n} from \"native-base\";\nimport { useState } from \"react\";\nimport tripStore from \"../../store/tripStore\";\nimport { observer } from \"mobx-react\";\nimport authStore from \"../../store/authStore\";\n\nconst TripUpdateModal = ({Oldtrip}) => {\n  const [showModal, setShowModal] = useState(false);\n\n  const [trips, setTrip] = useState({\n    name: Oldtrip.name,\n    // image: \"\",\n  });\n\n    const handleChange = (event) =>\n      setTrip({ ...trip, [event.target.name]: event.target.value });\n\n  //   const handleImage = (event) =>\n  //     setTrip({ ...trip, image: event.target.files[0] });\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    tripStore.updateTrip(trips);\n    // handleClose();\n  };\n\n\n  const [updatedTrip, setUpdatedTrip] = useState({\n      name: Oldtrip.name, \n    }\n);\nconst handleUpdate = (event) => {\n  event.preventDefault();\n  if (Oldtrip) tripStore.updateTrip(updatedTrip, Oldtrip._id);\n  else tripStore.createProduct(updatedTrip);\n};\n \n  return (\n    <Center flex={1} px=\"3\">\n      <>\n        <Button onPress={() => setShowModal(true)}>Update Trip</Button>\n        <Modal isOpen={showModal} onClose={() => setShowModal(false)}>\n          <Modal.Content maxWidth=\"400px\">\n            <Modal.CloseButton />\n            <Modal.Header>Update your Trip</Modal.Header>\n            <Modal.Body>\n              <FormControl>\n                <FormControl.Label>Title</FormControl.Label>\n\n                <Input onChangeText={(name) => setUpdatedTrip({ ...Oldtrip, name })} />\n              </FormControl>\n              <FormControl mt=\"3\">\n                <FormControl.Label>Photo</FormControl.Label>\n                <Input\n                  name=\"image\"\n                  type=\"file\"\n\n                  onChangeText={(image) => setUpdatedTrip({ ...trip, image })}\n                />\n              </FormControl>\n            </Modal.Body>\n\n            <Modal.Footer>\n              <Button.Group space={2}>\n                <Button\n                  variant=\"ghost\"\n                  colorScheme=\"blueGray\"\n                  onPress={() => {\n                    setShowModal(false);\n                  }}\n                >\n                  Cancel\n                </Button>\n                <Button onPress={handleSubmit}>Save</Button>\n              </Button.Group>\n            </Modal.Footer>\n          </Modal.Content>\n        </Modal>\n      </>\n    </Center>\n  );\n};\n\nexport default observer(TripUpdateModal);"]},"metadata":{},"sourceType":"module"}