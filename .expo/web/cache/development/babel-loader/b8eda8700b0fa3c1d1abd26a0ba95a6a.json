{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport { Button, Modal, FormControl, Input, Center, Spinner, Form, NativeBaseProvider } from \"native-base\";\nimport { useState } from \"react\";\nimport tripStore from \"../../store/tripStore\";\nimport { observer } from \"mobx-react\";\nimport authStore from \"../../store/authStore\";\n\nvar AddButton = function AddButton() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showModal = _useState2[0],\n      setShowModal = _useState2[1];\n\n  var _useState3 = useState({\n    name: \"\"\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      trip = _useState4[0],\n      setTrip = _useState4[1];\n\n  var handleSubmit = function handleSubmit(event) {\n    event.preventDefault();\n    tripStore.createTrip(trip);\n  };\n\n  return React.createElement(Center, {\n    flex: 1,\n    px: \"3\"\n  }, React.createElement(React.Fragment, null, React.createElement(Button, {\n    onPress: function onPress() {\n      return setShowModal(true);\n    },\n    backgroundColor: \"#0000ff\"\n  }, \"+\"), React.createElement(Modal, {\n    isOpen: showModal,\n    onClose: function onClose() {\n      return setShowModal(false);\n    }\n  }, React.createElement(Modal.Content, {\n    maxWidth: \"400px\"\n  }, React.createElement(Modal.CloseButton, null), React.createElement(Modal.Header, null, \"Add A Trip\"), React.createElement(Modal.Body, null, React.createElement(FormControl, null, React.createElement(FormControl.Label, null, \"Title\"), React.createElement(Input, {\n    onChangeText: function onChangeText(name) {\n      return setTrip(_objectSpread(_objectSpread({}, trip), {}, {\n        name: name\n      }));\n    }\n  })), React.createElement(FormControl, {\n    mt: \"3\"\n  }, React.createElement(FormControl.Label, null, \"Photo\"), React.createElement(Input, {\n    name: \"image\",\n    type: \"file\",\n    onChangeText: function onChangeText(image) {\n      return setTrip(_objectSpread(_objectSpread({}, trip), {}, {\n        image: image\n      }));\n    }\n  }))), React.createElement(Modal.Footer, null, React.createElement(Button.Group, {\n    space: 2\n  }, React.createElement(Button, {\n    variant: \"ghost\",\n    colorScheme: \"blueGray\",\n    onPress: function onPress() {\n      setShowModal(false);\n    },\n    colo: true,\n    backgroundColor: \"#0000ff\",\n    colorScheme: \"indigo\",\n    color: \"coolGray.600\"\n  }, \"Cancel\"), React.createElement(Button, {\n    onPress: handleSubmit\n  }, \"Save\")))))));\n};\n\nexport default observer(AddButton);","map":{"version":3,"sources":["/Users/ghadah/Development/Traveldiary-ProjectFE-Final/Components/trips/AddButton.js"],"names":["React","Button","Modal","FormControl","Input","Center","Spinner","Form","NativeBaseProvider","useState","tripStore","observer","authStore","AddButton","showModal","setShowModal","name","trip","setTrip","handleSubmit","event","preventDefault","createTrip","image"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,MADF,EAEEC,KAFF,EAGEC,WAHF,EAIEC,KAJF,EAKEC,MALF,EAMEC,OANF,EAOEC,IAPF,EAQEC,kBARF,QASO,aATP;AAUA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,SAAP;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAOC,SAAP;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,kBAAkCJ,QAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,MAAOK,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAAwBN,QAAQ,CAAC;AAC/BO,IAAAA,IAAI,EAAE;AADyB,GAAD,CAAhC;AAAA;AAAA,MAAOC,IAAP;AAAA,MAAaC,OAAb;;AAWA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AACAX,IAAAA,SAAS,CAACY,UAAV,CAAqBL,IAArB;AAED,GAJD;;AAMA,SACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,CAAd;AAAiB,IAAA,EAAE,EAAC;AAApB,KACE,0CACE,oBAAC,MAAD;AACA,IAAA,OAAO,EAAE;AAAA,aAAMF,YAAY,CAAC,IAAD,CAAlB;AAAA,KADT;AAEA,IAAA,eAAe,EAAC;AAFhB,SADF,EAKE,oBAAC,KAAD;AACA,IAAA,MAAM,EAAED,SADR;AACmB,IAAA,OAAO,EAAE;AAAA,aAAMC,YAAY,CAAC,KAAD,CAAlB;AAAA;AAD5B,KAGE,oBAAC,KAAD,CAAO,OAAP;AAAe,IAAA,QAAQ,EAAC;AAAxB,KACE,oBAAC,KAAD,CAAO,WAAP,OADF,EAEE,oBAAC,KAAD,CAAO,MAAP,qBAFF,EAGE,oBAAC,KAAD,CAAO,IAAP,QACE,oBAAC,WAAD,QACE,oBAAC,WAAD,CAAa,KAAb,gBADF,EAEE,oBAAC,KAAD;AAAO,IAAA,YAAY,EAAE,sBAACC,IAAD;AAAA,aAAUE,OAAO,iCAAMD,IAAN;AAAYD,QAAAA,IAAI,EAAJA;AAAZ,SAAjB;AAAA;AAArB,IAFF,CADF,EAKE,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAC;AAAhB,KACE,oBAAC,WAAD,CAAa,KAAb,gBADF,EAEE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,YAAY,EAAE,sBAACO,KAAD;AAAA,aAAWL,OAAO,iCAAMD,IAAN;AAAYM,QAAAA,KAAK,EAALA;AAAZ,SAAlB;AAAA;AAHhB,IAFF,CALF,CAHF,EAkBE,oBAAC,KAAD,CAAO,MAAP,QACE,oBAAC,MAAD,CAAQ,KAAR;AAAc,IAAA,KAAK,EAAE;AAArB,KACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,OADV;AAEE,IAAA,WAAW,EAAC,UAFd;AAGE,IAAA,OAAO,EAAE,mBAAM;AACbR,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KALH;AAME,IAAA,IAAI,MANN;AAOE,IAAA,eAAe,EAAC,SAPlB;AAQE,IAAA,WAAW,EAAC,QARd;AASE,IAAA,KAAK,EAAC;AATR,cADF,EAcE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEI;AAAjB,YAdF,CADF,CAlBF,CAHF,CALF,CADF,CADF;AAmDD,CAtED;;AAwEA,eAAeR,QAAQ,CAACE,SAAD,CAAvB","sourcesContent":["import React from \"react\";\nimport {\n  Button,\n  Modal,\n  FormControl,\n  Input,\n  Center,\n  Spinner,\n  Form,\n  NativeBaseProvider,\n} from \"native-base\";\nimport { useState } from \"react\";\nimport tripStore from \"../../store/tripStore\";\nimport { observer } from \"mobx-react\";\nimport authStore from \"../../store/authStore\";\n\nconst AddButton = () => {\n  const [showModal, setShowModal] = useState(false);\n  const [trip, setTrip] = useState({\n    name: \"\",\n    // image: \"\",\n  });\n\n  //   const handleChange = (event) =>\n  //     setTrip({ ...trip, [event.target.name]: event.target.value });\n\n  //   const handleImage = (event) =>\n  //     setTrip({ ...trip, image: event.target.files[0] });\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    tripStore.createTrip(trip);\n    // handleClose();\n  };\n\n  return (\n    <Center flex={1} px=\"3\">\n      <>\n        <Button \n        onPress={() => setShowModal(true)}\n        backgroundColor=\"#0000ff\"\n        >+</Button>\n        <Modal \n        isOpen={showModal} onClose={() => setShowModal(false)}\n        >\n          <Modal.Content maxWidth=\"400px\">\n            <Modal.CloseButton />\n            <Modal.Header>Add A Trip</Modal.Header>\n            <Modal.Body>\n              <FormControl>\n                <FormControl.Label>Title</FormControl.Label>\n                <Input onChangeText={(name) => setTrip({ ...trip, name })} />\n              </FormControl>\n              <FormControl mt=\"3\">\n                <FormControl.Label>Photo</FormControl.Label>\n                <Input\n                  name=\"image\"\n                  type=\"file\"\n                  onChangeText={(image) => setTrip({ ...trip, image })}\n                />\n              </FormControl>\n            </Modal.Body>\n\n            <Modal.Footer>\n              <Button.Group space={2}>\n                <Button\n                  variant=\"ghost\"\n                  colorScheme=\"blueGray\"\n                  onPress={() => {\n                    setShowModal(false);\n                  }}\n                  colo\n                  backgroundColor=\"#0000ff\"\n                  colorScheme=\"indigo\" \n                  color=\"coolGray.600\"\n                >\n                  Cancel\n                </Button>\n                <Button onPress={handleSubmit}>Save</Button>\n              </Button.Group>\n            </Modal.Footer>\n          </Modal.Content>\n        </Modal>\n      </>\n    </Center>\n  );\n};\n\nexport default observer(AddButton);\n"]},"metadata":{},"sourceType":"module"}