{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport View from \"react-native-web/dist/exports/View\";\nimport tripStore from \"../../store/tripStore\";\n\nvar TripUpdateModal = function TripUpdateModal(_ref) {\n  var tripDetail = _ref.tripDetail;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  var _useState3 = useState({\n    name: tripDetail.name,\n    image: tripDetail.image\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      trip = _useState4[0],\n      setTrip = _useState4[1];\n\n  var handleSubmit = function handleSubmit(event) {\n    event.preventDefault();\n    tripStore.updateTrip(trip, oldTrip._id);\n    console.log(trip);\n    handleClose();\n  };\n\n  return React.createElement(View, {\n    style: styles.centeredView\n  }, React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: modalVisible,\n    onRequestClose: function onRequestClose() {\n      Alert.alert(\"Modal has been closed.\");\n      setModalVisible(!modalVisible);\n    }\n  }, React.createElement(View, {\n    style: styles.centeredView,\n    onSubmit: handleSubmit\n  }, React.createElement(View, {\n    style: styles.modalView\n  }, React.createElement(Text, {\n    style: styles.modalText\n  }, \"Hello World!\"), React.createElement(Pressable, {\n    style: [styles.button, styles.buttonClose],\n    name: \"name\",\n    value: trip.name,\n    onPress: function onPress(e) {\n      return handleChange(e);\n    },\n    placeholder: \"Trip Name\"\n  }), React.createElement(Pressable, {\n    style: [styles.button, styles.buttonClose],\n    name: \"image\",\n    value: trip.image,\n    onPress: handleChange,\n    placeholder: \"Image\"\n  }, React.createElement(Text, {\n    style: styles.textStyle\n  }, \"Done\"))))), React.createElement(Pressable, {\n    style: [styles.button, styles.buttonOpen],\n    onPress: function onPress() {\n      return setModalVisible(true);\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyle\n  }, \"Update your Trip\")));\n};\n\nvar styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  buttonOpen: {\n    backgroundColor: \"#F194FF\"\n  },\n  buttonClose: {\n    backgroundColor: \"#2196F3\"\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  }\n});\nexport default TripUpdateModal;","map":{"version":3,"sources":["C:/Users/hamsa/developmint/Traveldiary-ProjectFE-Final/Components/trips/TripUpdateModal.js"],"names":["React","useState","tripStore","TripUpdateModal","tripDetail","modalVisible","setModalVisible","name","image","trip","setTrip","handleSubmit","event","preventDefault","updateTrip","oldTrip","_id","console","log","handleClose","styles","centeredView","Alert","alert","modalView","modalText","button","buttonClose","e","handleChange","textStyle","buttonOpen","StyleSheet","create","flex","justifyContent","alignItems","marginTop","margin","backgroundColor","borderRadius","padding","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","color","fontWeight","textAlign","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Alert, Modal, StyleSheet, Text, Pressable, View } from \"react-native\";\r\nimport tripStore from \"../../store/tripStore\";\r\n\r\nconst TripUpdateModal = ({tripDetail}) => {\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [trip, setTrip] = useState({\r\n    name: tripDetail.name,\r\n    image: tripDetail.image,\r\n  });\r\n\r\n  // const handleClose = () => setShow(false);\r\n  // const handleShow = () => setShow(true);\r\n\r\n  // const handleChange = (event) =>\r\n  //   setTrip({ ...trip, [event.target.name]: event.target.value });\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    tripStore.updateTrip(trip, oldTrip._id);\r\n    console.log(trip);\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <View style={styles.centeredView}>\r\n      <Modal \r\n      //  onHide={handleClose}\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        visible={modalVisible}\r\n        onRequestClose={() => {\r\n          Alert.alert(\"Modal has been closed.\");\r\n          setModalVisible(!modalVisible);\r\n        }}\r\n      >\r\n        <View style={styles.centeredView} onSubmit={handleSubmit}>\r\n          <View style={styles.modalView}>\r\n            <Text style={styles.modalText}>Hello World!</Text>\r\n            <Pressable\r\n              style={[styles.button, styles.buttonClose]}\r\n              name=\"name\"\r\n              value={trip.name}\r\n              onPress={(e) => handleChange(e)}\r\n              placeholder=\"Trip Name\"\r\n            >\r\n              </Pressable>\r\n              <Pressable\r\n              style={[styles.button, styles.buttonClose]}\r\n              name=\"image\"\r\n              value={trip.image}\r\n              onPress={handleChange}\r\n              placeholder=\"Image\">\r\n              <Text style={styles.textStyle}>Done</Text>\r\n            </Pressable>\r\n          \r\n          </View>\r\n        </View>\r\n      </Modal>\r\n      <Pressable\r\n        style={[styles.button, styles.buttonOpen]}\r\n        onPress={() => setModalVisible(true)}\r\n      >\r\n        <Text style={styles.textStyle} >Update your Trip</Text>\r\n      </Pressable>\r\n     \r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  centeredView: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 22,\r\n  },\r\n  modalView: {\r\n    margin: 20,\r\n    backgroundColor: \"white\",\r\n    borderRadius: 20,\r\n    padding: 35,\r\n    alignItems: \"center\",\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 4,\r\n    elevation: 5,\r\n  },\r\n  button: {\r\n    borderRadius: 20,\r\n    padding: 10,\r\n    elevation: 2,\r\n  },\r\n  buttonOpen: {\r\n    backgroundColor: \"#F194FF\",\r\n  },\r\n  buttonClose: {\r\n    backgroundColor: \"#2196F3\",\r\n  },\r\n  textStyle: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n  },\r\n  modalText: {\r\n    marginBottom: 15,\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n\r\nexport default TripUpdateModal;\r\n"]},"metadata":{},"sourceType":"module"}