{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { makeAutoObservable } from \"mobx\";\nimport { instance } from \"./instance\";\n\nvar TripStore = function TripStore() {\n  var _this = this;\n\n  _classCallCheck(this, TripStore);\n\n  this.trips = [];\n  this.isLoading = true;\n\n  this.fetchTrips = function _callee() {\n    var response;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(instance.get(\"/trip\"));\n\n          case 3:\n            response = _context.sent;\n            _this.trips = response.data;\n            _this.isLoading = false;\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"TripStore -> fetchTrips -> error\", _context.t0);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  this.createTrip = function _callee2(newTrip) {\n    var response;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(instance.post(\"/trip\", formData));\n\n          case 3:\n            response = _context2.sent;\n\n            _this.trips.push(response.data);\n\n            _context2.next = 10;\n            break;\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  makeAutoObservable(this);\n};\n\nvar tripStore = new TripStore();\ntripStore.fetchTrips();\nexport default tripStore;\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["/Users/abdullahalkhaldi/Development/Traveldiary-ProjectFE-Final/store/tripStore.js"],"names":["React","makeAutoObservable","instance","TripStore","trips","isLoading","fetchTrips","get","response","data","console","log","createTrip","newTrip","post","formData","push","tripStore","styles","StyleSheet","create"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,kBAAT,QAAmC,MAAnC;AACA,SAASC,QAAT;;IAEMC,S,GAIJ,qBAAc;AAAA;;AAAA;;AAAA,OAHdC,KAGc,GAHN,EAGM;AAAA,OAFdC,SAEc,GAFF,IAEE;;AAAA,OAIdC,UAJc,GAID;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEcJ,QAAQ,CAACK,GAAT,CAAa,OAAb,CAFd;;AAAA;AAEHC,YAAAA,QAFG;AAIT,YAAA,KAAI,CAACJ,KAAL,GAAaI,QAAQ,CAACC,IAAtB;AACA,YAAA,KAAI,CAACJ,SAAL,GAAiB,KAAjB;AALS;AAAA;;AAAA;AAAA;AAAA;AAOTK,YAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;;AAPS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAJC;;AAAA,OAgBdC,UAhBc,GAgBD,kBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAMcX,QAAQ,CAACY,IAAT,CAAc,OAAd,EAAuBC,QAAvB,CANd;;AAAA;AAMHP,YAAAA,QANG;;AAOT,YAAA,KAAI,CAACJ,KAAL,CAAWY,IAAX,CAAgBR,QAAQ,CAACC,IAAzB;;AAPS;AAAA;;AAAA;AAAA;AAAA;AASTC,YAAAA,OAAO,CAACC,GAAR;;AATS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAhBC;;AACZV,EAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,C;;AA8BH,IAAMgB,SAAS,GAAG,IAAId,SAAJ,EAAlB;AACAc,SAAS,CAACX,UAAV;AACA,eAAeW,SAAf;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf","sourcesContent":["import React from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport { makeAutoObservable } from \"mobx\";\nimport { instance } from \"./instance\";\n\nclass TripStore {\n  trips = [];\n  isLoading = true;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  fetchTrips = async () => {\n    try {\n      const response = await instance.get(\"/trip\");\n      // check s\n      this.trips = response.data;\n      this.isLoading = false;\n    } catch (error) {\n      console.log(\"TripStore -> fetchTrips -> error\", error);\n    }\n  };\n\n  \n  createTrip = async (newTrip) => {\n    try {\n      // const formData = new FormData();\n      // for (const key in newTrip) {\n      //   formData.append(key, newTrip[key]);\n      // }\n      const response = await instance.post(\"/trip\", formData);\n      this.trips.push(response.data);\n    } catch (error) {\n      console.log(\n        error\n      );\n    }\n  };\n}\n\nconst tripStore = new TripStore();\ntripStore.fetchTrips();\nexport default tripStore;\n\nconst styles = StyleSheet.create({});\n"]},"metadata":{},"sourceType":"module"}