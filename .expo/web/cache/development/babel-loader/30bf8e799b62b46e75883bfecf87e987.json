{"ast":null,"code":"var _this = this;\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TripItem from \"./TripItem\";\nimport tripStore from \"../../store/tripStore\";\nimport { observer } from 'mobx-react-lite';\n\nvar TripList = function TripList(_ref) {\n  var navigation = _ref.navigation;\n  var tripList = tripStore.trips.map(function (trip) {\n    return React.createElement(TripItem, {\n      navigation: navigation,\n      trip: trip,\n      key: trip._id\n    });\n  });\n  return React.createElement(View, null, tripList);\n};\n\nupdateTrip = function (_updateTrip) {\n  function updateTrip(_x, _x2) {\n    return _updateTrip.apply(this, arguments);\n  }\n\n  updateTrip.toString = function () {\n    return _updateTrip.toString();\n  };\n\n  return updateTrip;\n}(function _callee(updateTrip, tripId) {\n  var res;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(instance.put(\"/trips/\" + tripId, updateTrip));\n\n        case 3:\n          res = _context.sent;\n          _this.trips = _this.trips.map(function (trip) {\n            return trip._id === tripId ? res.data : trip;\n          });\n          _context.next = 10;\n          break;\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(\"tripStore -> updateTrip -> error\", _context.t0);\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n});\n\nexport default observer(TripList);\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["C:/Users/hamsa/developmint/Traveldiary-ProjectFE-Final/Components/trips/TripList.js"],"names":["React","TripItem","tripStore","observer","TripList","navigation","tripList","trips","map","trip","_id","updateTrip","tripId","instance","put","res","data","console","log","styles","StyleSheet","create"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,OAAOC,QAAP;AACA,OAAOC,SAAP;AACA,SAASC,QAAT,QAAyB,iBAAzB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;AACjC,MAAMC,QAAQ,GAAGJ,SAAS,CAACK,KAAV,CAAgBC,GAAhB,CAAoB,UAACC,IAAD;AAAA,WACjC,oBAAC,QAAD;AAAU,MAAA,UAAU,EAAEJ,UAAtB;AAAkC,MAAA,IAAI,EAAEI,IAAxC;AAA8C,MAAA,GAAG,EAAEA,IAAI,CAACC;AAAxD,MADiC;AAAA,GAApB,CAAjB;AAGI,SAAO,oBAAC,IAAD,QAAOJ,QAAP,CAAP;AAIH,CARL;;AAUIK,UAAU;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,EAAG,iBAAOA,UAAP,EAAmBC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEWC,QAAQ,CAACC,GAAT,aAAuBF,MAAvB,EAAiCD,UAAjC,CAFX;;AAAA;AAEDI,UAAAA,GAFC;AAGP,UAAA,KAAI,CAACR,KAAL,GAAa,KAAI,CAACA,KAAL,CAAWC,GAAX,CAAe,UAACC,IAAD;AAAA,mBAC1BA,IAAI,CAACC,GAAL,KAAaE,MAAb,GAAsBG,GAAG,CAACC,IAA1B,GAAiCP,IADP;AAAA,WAAf,CAAb;AAHO;AAAA;;AAAA;AAAA;AAAA;AAOPQ,UAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;;AAPO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAH,CAAV;;AAUJ,eAAef,QAAQ,CAACC,QAAD,CAAvB;AAEA,IAAMe,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf","sourcesContent":["import React from 'react'\r\nimport { StyleSheet, Text, View } from 'react-native'\r\nimport TripItem from './TripItem';\r\nimport tripStore from '../../store/tripStore';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nconst TripList = ({ navigation }) => {\r\n    const tripList = tripStore.trips.map((trip) => ( \r\n        <TripItem navigation={navigation} trip={trip} key={trip._id} /> \r\n            ));\r\n        return <View>{tripList}</View>\r\n        \r\n            \r\n        \r\n    };\r\n\r\n    updateTrip = async (updateTrip, tripId) => {\r\n        try {\r\n          const res = await instance.put(`/trips/${tripId}`, updateTrip);\r\n          this.trips = this.trips.map((trip) =>\r\n            trip._id === tripId ? res.data : trip\r\n          );\r\n        } catch (error) {\r\n          console.log(\"tripStore -> updateTrip -> error\", error);\r\n        }\r\n      };\r\nexport default observer(TripList)\r\n\r\nconst styles = StyleSheet.create({})\r\n\r\n// testing\r\n"]},"metadata":{},"sourceType":"module"}