{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NativeBaseProvider, Box, Text, Pressable, Heading, IconButton, Icon, HStack, Avatar, VStack, Spacer } from 'native-base';\nimport { SwipeListView } from 'react-native-swipe-list-view';\nimport { MaterialIcons, Ionicons, Entypo } from '@expo/vector-icons';\nexport default function TravelDetail() {\n  var _useState = useState('Basic'),\n      _useState2 = _slicedToArray(_useState, 2),\n      mode = _useState2[0],\n      setMode = _useState2[1];\n\n  var closeRow = function closeRow(rowMap, rowKey) {\n    if (rowMap[rowKey]) {\n      rowMap[rowKey].closeRow();\n    }\n  };\n\n  function Basic() {\n    return React.createElement(NativeBaseProvider, null, React.createElement(Box, {\n      bg: \"white\",\n      flex: \"1\",\n      safeAreaTop: true\n    }, React.createElement(Heading, {\n      p: \"4\",\n      pb: \"3\",\n      size: \"lg\"\n    }, \"Inbox\"), React.createElement(Basic, null)));\n  }\n\n  React.createElement(Box, {\n    maxW: \"100%\",\n    rounded: \"sm\",\n    overflow: \"hidden\",\n    borderColor: \"coolGray.200\",\n    marginLeft: \"0\",\n    marginRight: \"0\",\n    borderWidth: \"1\",\n    _dark: {\n      borderColor: \"coolGray.600\",\n      backgroundColor: \"gray.700\"\n    },\n    _web: {\n      shadow: 2,\n      borderWidth: 0\n    },\n    _light: {\n      backgroundColor: \"gray.50\"\n    },\n    shadow: \"3\"\n  }, React.createElement(Box, null, React.createElement(AspectRatio, {\n    w: \"100%\",\n    ratio: 16 / 9\n  }, React.createElement(Image, {\n    source: {\n      uri: baseURL + trip.image\n    },\n    alt: \"image\"\n  })), React.createElement(Center, {\n    bg: \"#0000ff\",\n    _dark: {\n      bg: \"violet.400\"\n    },\n    _text: {\n      color: \"#f8f8ff\",\n      fontWeight: \"700\",\n      fontSize: \"xs\"\n    },\n    position: \"absolute\",\n    bottom: \"0\",\n    px: \"3\",\n    py: \"1.5\"\n  }, trip.name), React.createElement(Button, {\n    mt: \"2\",\n    colorScheme: \"indigo\",\n    onPress: handleDelete,\n    backgroundColor: \"#0000ff\"\n  }, \"Delete\")), React.createElement(Stack, {\n    p: \"4\",\n    space: 3\n  }, React.createElement(Stack, {\n    space: 2\n  }, React.createElement(Heading, {\n    size: \"md\",\n    ml: \"-1\"\n  }, trip.title), React.createElement(Text, {\n    fontSize: \"xs\",\n    _light: {\n      color: \"#0000ff\"\n    },\n    _dark: {\n      color: \"#0000ff\"\n    },\n    fontWeight: \"500\",\n    ml: \"-0.5\",\n    mt: \"-1\"\n  }, trip.subtitle)), React.createElement(Text, {\n    fontWeight: \"400\"\n  }, trip.description), React.createElement(HStack, {\n    alignItems: \"center\",\n    space: 4,\n    justifyContent: \"space-between\"\n  }, React.createElement(HStack, {\n    alignItems: \"center\"\n  }, React.createElement(Text, {\n    color: \"coolGray.600\",\n    _dark: {\n      color: \"warmGray.200\"\n    },\n    fontWeight: \"400\"\n  }, trip.from, trip.to)))));\n}\n\nvar deleteRow = function deleteRow(rowMap, rowKey) {\n  closeRow(rowMap, rowKey);\n\n  var newData = _toConsumableArray(listData);\n\n  var prevIndex = listData.findIndex(function (item) {\n    return item.key === rowKey;\n  });\n  newData.splice(prevIndex, 1);\n  setListData(newData);\n};\n\nvar onRowDidOpen = function onRowDidOpen(rowKey) {\n  console.log('This row opened', rowKey);\n};\n\nvar renderItem = function renderItem(_ref) {\n  var item = _ref.item,\n      index = _ref.index;\n  return React.createElement(Box, null, React.createElement(Pressable, {\n    onPress: function onPress() {\n      return console.log('You touched me');\n    },\n    bg: \"white\"\n  }, React.createElement(Box, {\n    pl: \"4\",\n    pr: \"5\",\n    py: \"2\"\n  }, React.createElement(HStack, {\n    alignItems: \"center\",\n    space: 3\n  }, React.createElement(Avatar, {\n    size: \"48px\",\n    source: {\n      uri: item.avatarUrl\n    }\n  }), React.createElement(VStack, null, React.createElement(Text, {\n    color: \"coolGray.800\",\n    _dark: {\n      color: 'warmGray.50'\n    },\n    bold: true\n  }, item.fullName), React.createElement(Text, {\n    color: \"coolGray.600\",\n    _dark: {\n      color: 'warmGray.200'\n    }\n  }, item.recentText)), React.createElement(Spacer, null), React.createElement(Text, {\n    fontSize: \"xs\",\n    color: \"coolGray.800\",\n    _dark: {\n      color: 'warmGray.50'\n    },\n    alignSelf: \"flex-start\"\n  }, item.timeStamp)))));\n};\n\nvar renderHiddenItem = function renderHiddenItem(data, rowMap) {\n  return React.createElement(HStack, {\n    flex: \"1\",\n    pl: \"2\"\n  }, React.createElement(Pressable, {\n    w: \"70\",\n    ml: \"auto\",\n    cursor: \"pointer\",\n    bg: \"coolGray.200\",\n    justifyContent: \"center\",\n    onPress: function onPress() {\n      return closeRow(rowMap, data.item.key);\n    },\n    _pressed: {\n      opacity: 0.5\n    }\n  }, React.createElement(VStack, {\n    alignItems: \"center\",\n    space: 2\n  }, React.createElement(Icon, {\n    as: React.createElement(Entypo, {\n      name: \"dots-three-horizontal\"\n    }),\n    size: \"xs\",\n    color: \"coolGray.800\"\n  }), React.createElement(Text, {\n    fontSize: \"xs\",\n    fontWeight: \"medium\",\n    color: \"coolGray.800\"\n  }, \"More\"))), React.createElement(Pressable, {\n    w: \"70\",\n    cursor: \"pointer\",\n    bg: \"red.500\",\n    justifyContent: \"center\",\n    onPress: function onPress() {\n      return deleteRow(rowMap, data.item.key);\n    },\n    _pressed: {\n      opacity: 0.5\n    }\n  }, React.createElement(VStack, {\n    alignItems: \"center\",\n    space: 2\n  }, React.createElement(Icon, {\n    as: React.createElement(MaterialIcons, {\n      name: \"delete\"\n    }),\n    color: \"white\",\n    size: \"xs\"\n  }), React.createElement(Text, {\n    color: \"white\",\n    fontSize: \"xs\",\n    fontWeight: \"medium\"\n  }, \"Delete\"))));\n};","map":{"version":3,"sources":["/Users/ghadah/Development/Traveldiary-ProjectFE-Final/Components/trips/TripDetail.js"],"names":["React","useState","NativeBaseProvider","Box","Text","Pressable","Heading","IconButton","Icon","HStack","Avatar","VStack","Spacer","SwipeListView","MaterialIcons","Ionicons","Entypo","TravelDetail","mode","setMode","closeRow","rowMap","rowKey","Basic","borderColor","backgroundColor","shadow","borderWidth","uri","baseURL","trip","image","bg","color","fontWeight","fontSize","name","handleDelete","title","subtitle","description","from","to","deleteRow","newData","listData","prevIndex","findIndex","item","key","splice","setListData","onRowDidOpen","console","log","renderItem","index","avatarUrl","fullName","recentText","timeStamp","renderHiddenItem","data","opacity"],"mappings":"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","sourcesContent":["\nimport React, { useState } from 'react';\nimport { Dimensions, TouchableOpacity, View } from 'react-native';\n\nimport {\n  NativeBaseProvider,\n  Box,\n  Text,\n  Pressable,\n  Heading,\n  IconButton,\n  Icon,\n  HStack,\n  Avatar,\n  VStack,\n  Spacer,\n} from 'native-base';\nimport { SwipeListView } from 'react-native-swipe-list-view';\nimport { MaterialIcons, Ionicons, Entypo } from '@expo/vector-icons';\n\nexport default function TravelDetail() {\n  const [mode, setMode] = useState('Basic');\n\n// const [listData, setListData] = useState(data);\n\n  const closeRow = (rowMap, rowKey) => {\n    if (rowMap[rowKey]) {\n      rowMap[rowKey].closeRow();\n    }\n  };\n\n  function Basic() {\n    return (\n      <NativeBaseProvider>\n        <Box bg=\"white\" flex=\"1\" safeAreaTop>\n          <Heading p=\"4\" pb=\"3\" size=\"lg\">\n            Inbox\n          </Heading>\n          <Basic />\n        </Box>\n      </NativeBaseProvider>\n    );\n  }\n    \n      <Box\n      maxW=\"100%\"\n      rounded=\"sm\"\n      overflow=\"hidden\"\n      borderColor=\"coolGray.200\"\n      marginLeft=\"0\"\n      marginRight=\"0\"\n      borderWidth=\"1\"\n      _dark={{\n        borderColor: \"coolGray.600\",\n        backgroundColor: \"gray.700\",\n      }}\n      _web={{\n        shadow: 2,\n        borderWidth: 0,\n      }}\n      _light={{\n        backgroundColor: \"gray.50\",\n      }}\n      shadow={\"3\"}\n    >\n      <Box>\n        <AspectRatio w=\"100%\" ratio={16 / 9}>\n          <Image source={{ uri: baseURL + trip.image }} alt=\"image\" />\n        </AspectRatio>\n        <Center\n          bg=\"#0000ff\"\n          _dark={{\n            bg: \"violet.400\",\n          }}\n          _text={{\n            color: \"#f8f8ff\",\n            fontWeight: \"700\",\n            fontSize: \"xs\",\n          }}\n          position=\"absolute\"\n          bottom=\"0\"\n          px=\"3\"\n          py=\"1.5\"\n        >\n          {trip.name}\n        </Center>\n        \n        <Button\n          mt=\"2\"\n          colorScheme=\"indigo\"\n          onPress={handleDelete}\n          backgroundColor=\"#0000ff\"\n        >\n          Delete\n        </Button>\n      </Box>\n\n      <Stack p=\"4\" space={3}>\n        <Stack space={2}>\n          <Heading size=\"md\" ml=\"-1\">\n            {trip.title}\n          </Heading>\n          <Text\n            fontSize=\"xs\"\n            _light={{\n              color: \"#0000ff\",\n            }}\n            _dark={{\n              color: \"#0000ff\",\n            }}\n            fontWeight=\"500\"\n            ml=\"-0.5\"\n            mt=\"-1\"\n          >\n            {trip.subtitle}\n          </Text>\n        </Stack>\n        <Text fontWeight=\"400\">{trip.description}</Text>\n        <HStack alignItems=\"center\" space={4} justifyContent=\"space-between\">\n          <HStack alignItems=\"center\">\n            <Text\n              color=\"coolGray.600\"\n              _dark={{\n                color: \"warmGray.200\",\n              }}\n              fontWeight=\"400\"\n            >\n              {trip.from}\n              {trip.to}\n            </Text>\n          </HStack>\n        </HStack>\n      </Stack>\n    </Box>\n    \n  }\n\n\n\n  const deleteRow = (rowMap, rowKey) => {\n    closeRow(rowMap, rowKey);\n    const newData = [...listData];\n    const prevIndex = listData.findIndex((item) => item.key === rowKey);\n    newData.splice(prevIndex, 1);\n    setListData(newData);\n  };\n\n  const onRowDidOpen = (rowKey) => {\n    console.log('This row opened', rowKey);\n  };\n\n  const renderItem = ({ item, index }) => (\n    <Box>\n      <Pressable onPress={() => console.log('You touched me')} bg=\"white\">\n        <Box\n          pl=\"4\"\n          pr=\"5\"\n          py=\"2\"\n          >\n          <HStack alignItems=\"center\" space={3}>\n            <Avatar size=\"48px\" source={{ uri: item.avatarUrl }} />\n            <VStack>\n              <Text color=\"coolGray.800\"  _dark={{ color: 'warmGray.50' }}  bold>\n                {item.fullName}\n              </Text>\n              <Text color=\"coolGray.600\" _dark={{ color: 'warmGray.200' }}>{item.recentText}</Text>\n            </VStack>\n            <Spacer />\n            <Text fontSize=\"xs\" color=\"coolGray.800\"  _dark={{ color: 'warmGray.50' }} alignSelf=\"flex-start\">\n              {item.timeStamp}\n            </Text>\n          </HStack>\n        </Box>\n      </Pressable>\n    </Box>\n  );\n\n  const renderHiddenItem = (data, rowMap) => (\n    <HStack flex=\"1\" pl=\"2\">\n      <Pressable\n        w=\"70\"\n        ml=\"auto\"\n        cursor=\"pointer\"\n        bg=\"coolGray.200\"\n        justifyContent=\"center\"\n        onPress={() => closeRow(rowMap, data.item.key)}\n        _pressed={{\n          opacity: 0.5,\n        }}>\n        <VStack alignItems=\"center\" space={2}>\n          <Icon\n            as={<Entypo name=\"dots-three-horizontal\" />}\n            size=\"xs\"\n            color=\"coolGray.800\"\n          />\n          <Text fontSize=\"xs\" fontWeight=\"medium\" color=\"coolGray.800\">\n            More\n          </Text>\n        </VStack>\n      </Pressable>\n      <Pressable\n        w=\"70\"\n        cursor=\"pointer\"\n        bg=\"red.500\"\n        justifyContent=\"center\"\n        onPress={() => deleteRow(rowMap, data.item.key)}\n        _pressed={{\n          opacity: 0.5,\n        }}>\n        <VStack alignItems=\"center\" space={2}>\n          <Icon as={<MaterialIcons name=\"delete\" />} color=\"white\" size=\"xs\" />\n          <Text color=\"white\" fontSize=\"xs\" fontWeight=\"medium\">\n            Delete\n          </Text>\n        </VStack>\n      </Pressable>\n    </HStack>\n  );\n\n  // return (\n  //   <Box bg=\"white\" safeArea flex=\"1\">\n  //     <SwipeListView\n  //       data={listData}\n  //       renderItem={renderItem}\n  //       renderHiddenItem={renderHiddenItem}\n  //       rightOpenValue={-130}\n  //       previewRowKey={'0'}\n  //       previewOpenValue={-40}\n  //       previewOpenDelay={3000}\n  //       onRowDidOpen={onRowDidOpen}\n  //     />\n  //   </Box>\n  // );\n\n\n"]},"metadata":{},"sourceType":"module"}