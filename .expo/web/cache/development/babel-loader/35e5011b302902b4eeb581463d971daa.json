{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { makeAutoObservable } from \"mobx\";\nimport { instance } from \"./instance\";\n\nvar TripStore = function TripStore() {\n  var _this = this;\n\n  _classCallCheck(this, TripStore);\n\n  this.trips = [];\n  this.isLoading = true;\n\n  this.fetchTrips = function _callee() {\n    var response;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(instance.get(\"/trip\"));\n\n          case 3:\n            response = _context.sent;\n            _this.trips = response.data;\n            _this.isLoading = false;\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"TripStore -> fetchTrips -> error\", _context.t0);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  this.createTrip = function _callee2(newTrip) {\n    var formData, key, response;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            formData = new FormData();\n\n            for (key in newTrip) {\n              formData.append(key, newTrip[key]);\n            }\n\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(instance.post(\"/trips\", formData));\n\n          case 5:\n            response = _context2.sent;\n\n            _this.trips.push(response.data);\n\n            _context2.next = 12;\n            break;\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(\"ðŸš€ ~ file: tripStore.js ~ line 16 ~ TripStore ~ createTrip= ~ error\", _context2.t0);\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  };\n\n  makeAutoObservable(this);\n};\n\nvar tripStore = new TripStore();\ntripStore.fetchTrips();\nexport default tripStore;\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["C:/Users/hamsa/developmint/Traveldiary-ProjectFE-Final/store/tripStore.js"],"names":["React","makeAutoObservable","instance","TripStore","trips","isLoading","fetchTrips","get","response","data","console","log","createTrip","newTrip","formData","FormData","key","append","post","push","tripStore","styles","StyleSheet","create"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,kBAAT,QAAmC,MAAnC;AACA,SAASC,QAAT;;IAEMC,S,GAIJ,qBAAc;AAAA;;AAAA;;AAAA,OAHdC,KAGc,GAHN,EAGM;AAAA,OAFdC,SAEc,GAFF,IAEE;;AAAA,OAIdC,UAJc,GAID;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEcJ,QAAQ,CAACK,GAAT,CAAa,OAAb,CAFd;;AAAA;AAEHC,YAAAA,QAFG;AAIT,YAAA,KAAI,CAACJ,KAAL,GAAaI,QAAQ,CAACC,IAAtB;AACA,YAAA,KAAI,CAACJ,SAAL,GAAiB,KAAjB;AALS;AAAA;;AAAA;AAAA;AAAA;AAOTK,YAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;;AAPS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAJC;;AAAA,OAgBdC,UAhBc,GAgBD,kBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEHC,YAAAA,QAFG,GAEQ,IAAIC,QAAJ,EAFR;;AAGT,iBAAWC,GAAX,IAAkBH,OAAlB,EAA2B;AACzBC,cAAAA,QAAQ,CAACG,MAAT,CAAgBD,GAAhB,EAAqBH,OAAO,CAACG,GAAD,CAA5B;AACD;;AALQ;AAAA,6CAMcd,QAAQ,CAACgB,IAAT,CAAc,QAAd,EAAwBJ,QAAxB,CANd;;AAAA;AAMHN,YAAAA,QANG;;AAOT,YAAA,KAAI,CAACJ,KAAL,CAAWe,IAAX,CAAgBX,QAAQ,CAACC,IAAzB;;AAPS;AAAA;;AAAA;AAAA;AAAA;AASTC,YAAAA,OAAO,CAACC,GAAR,CACE,qEADF;;AATS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAhBC;;AACZV,EAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,C;;AA+BH,IAAMmB,SAAS,GAAG,IAAIjB,SAAJ,EAAlB;AACAiB,SAAS,CAACd,UAAV;AACA,eAAec,SAAf;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf","sourcesContent":["import React from \"react\";\r\nimport { StyleSheet, Text, View } from \"react-native\";\r\nimport { makeAutoObservable } from \"mobx\";\r\nimport { instance } from \"./instance\";\r\n\r\nclass TripStore {\r\n  trips = [];\r\n  isLoading = true;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  fetchTrips = async () => {\r\n    try {\r\n      const response = await instance.get(\"/trip\");\r\n      // check s\r\n      this.trips = response.data;\r\n      this.isLoading = false;\r\n    } catch (error) {\r\n      console.log(\"TripStore -> fetchTrips -> error\", error);\r\n    }\r\n  };\r\n\r\n  \r\n  createTrip = async (newTrip) => {\r\n    try {\r\n      const formData = new FormData();\r\n      for (const key in newTrip) {\r\n        formData.append(key, newTrip[key]);\r\n      }\r\n      const response = await instance.post(\"/trips\", formData);\r\n      this.trips.push(response.data);\r\n    } catch (error) {\r\n      console.log(\r\n        \"ðŸš€ ~ file: tripStore.js ~ line 16 ~ TripStore ~ createTrip= ~ error\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n}\r\n\r\nconst tripStore = new TripStore();\r\ntripStore.fetchTrips();\r\nexport default tripStore;\r\n\r\nconst styles = StyleSheet.create({});\r\n"]},"metadata":{},"sourceType":"module"}