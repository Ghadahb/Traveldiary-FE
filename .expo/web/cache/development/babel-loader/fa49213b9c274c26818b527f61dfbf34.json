{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Container, Header, Content, SwipeRow, View, Text, Icon, Button } from 'native-base';\n\nvar TripDetail = function (_Component) {\n  _inherits(TripDetail, _Component);\n\n  var _super = _createSuper(TripDetail);\n\n  function TripDetail() {\n    _classCallCheck(this, TripDetail);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(TripDetail, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Container, null, React.createElement(Header, null), React.createElement(Content, {\n        scrollEnabled: false\n      }, React.createElement(SwipeRow, {\n        leftOpenValue: 75,\n        rightOpenValue: -75,\n        left: React.createElement(Button, {\n          success: true,\n          onPress: function onPress() {\n            return alert('Add');\n          }\n        }, React.createElement(Icon, {\n          active: true,\n          name: \"add\"\n        })),\n        body: React.createElement(View, null, React.createElement(Text, null, \"SwipeRow Body Text\")),\n        right: React.createElement(Button, {\n          danger: true,\n          onPress: function onPress() {\n            return alert('Trash');\n          }\n        }, React.createElement(Icon, {\n          active: true,\n          name: \"trash\"\n        }))\n      })));\n    }\n  }]);\n\n  return TripDetail;\n}(Component);","map":{"version":3,"sources":["/Users/ghadah/Development/Traveldiary-ProjectFE-Final/Components/trips/TripDetail.js"],"names":["React","Component","Container","Header","Content","SwipeRow","View","Text","Icon","Button","TripDetail","alert"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,OAA5B,EAAqCC,QAArC,EAA+CC,IAA/C,EAAqDC,IAArD,EAA2DC,IAA3D,EAAiEC,MAAjE,QAA+E,aAA/E;;IAEMC,U;;;;;;;;;;;;;WACJ,kBAAS;AACP,aACE,oBAAC,SAAD,QACE,oBAAC,MAAD,OADF,EAEE,oBAAC,OAAD;AAAS,QAAA,aAAa,EAAE;AAAxB,SACE,oBAAC,QAAD;AACE,QAAA,aAAa,EAAE,EADjB;AAEE,QAAA,cAAc,EAAE,CAAC,EAFnB;AAGE,QAAA,IAAI,EACF,oBAAC,MAAD;AAAQ,UAAA,OAAO,MAAf;AAAgB,UAAA,OAAO,EAAE;AAAA,mBAAMC,KAAK,CAAC,KAAD,CAAX;AAAA;AAAzB,WACE,oBAAC,IAAD;AAAM,UAAA,MAAM,MAAZ;AAAa,UAAA,IAAI,EAAC;AAAlB,UADF,CAJJ;AAQE,QAAA,IAAI,EACF,oBAAC,IAAD,QACE,oBAAC,IAAD,6BADF,CATJ;AAaE,QAAA,KAAK,EACH,oBAAC,MAAD;AAAQ,UAAA,MAAM,MAAd;AAAe,UAAA,OAAO,EAAE;AAAA,mBAAMA,KAAK,CAAC,OAAD,CAAX;AAAA;AAAxB,WACE,oBAAC,IAAD;AAAM,UAAA,MAAM,MAAZ;AAAa,UAAA,IAAI,EAAC;AAAlB,UADF;AAdJ,QADF,CAFF,CADF;AA0BD;;;;EA5BsBV,S","sourcesContent":["import React, { Component } from 'react';\nimport { Container, Header, Content, SwipeRow, View, Text, Icon, Button } from 'native-base';\n\nclass TripDetail extends Component {\n  render() {\n    return (\n      <Container>\n        <Header />\n        <Content scrollEnabled={false}>\n          <SwipeRow\n            leftOpenValue={75}\n            rightOpenValue={-75}\n            left={\n              <Button success onPress={() => alert('Add')}>\n                <Icon active name=\"add\" />\n              </Button>\n            }\n            body={\n              <View>\n                <Text>SwipeRow Body Text</Text>\n              </View>\n            }\n            right={\n              <Button danger onPress={() => alert('Trash')}>\n                <Icon active name=\"trash\" />\n              </Button>\n            }\n          />\n        </Content>\n      </Container>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}